

 lab install-storage start

source /usr/local/etc/ocp4.config

oc login -u kubeadmin -p ${RHT_OCP4_KUBEADM_PASSWD} https://api.ocp4.example.com:6443

oc get nodes
oc adm top node

oc new-project install-storage

oc get storageclass

oc new-app --name postgresql-persistent --image registry.redhat.io/rhel8/postgresql-13:1-7 -e POSTGRESQL_USER=redhat -e POSTGRESQL_PASSWORD=redhat123 -e POSTGRESQL_DATABASE=persistentdb


# Create a PVC and volume for the postgresql-persistent deployment
oc set volumes deployment/postgresql-persistent \
  --add --name postgresql-storage --type pvc --claim-class nfs-storage \
  --claim-mode rwo --claim-size 10Gi --mount-path /var/lib/pgsql \
  --claim-name postgresql-storage


oc get pvc


# List persistent volumes with custom columns
oc get pv -o custom-columns=NAME:.metadata.name,CLAIM:.spec.claimRef.name

cd ~/DO280/labs/install-storage
./init_data.sh
./check_data.sh

oc delete all -l app=postgresql-persistent



# Create the postgresql-persistent2 deployment
oc new-app --name postgresql-persistent2 \
  --image registry.redhat.io/rhel8/postgresql-13:1-7 \
  -e POSTGRESQL_USER=redhat \
  -e POSTGRESQL_PASSWORD=redhat123 \
  -e POSTGRESQL_DATABASE=persistentdb

cd ~/DO280/labs/install-storage
./check_data.sh


# Attach the existing PVC to the postgresql-persistent2 deployment
oc set volumes \
  deployment/postgresql-persistent2 \
  --add --name postgresql-storage --type pvc \
  --claim-name postgresql-storage --mount-path /var/lib/pgsql


cd ~/DO280/labs/install-storage
./check_data.sh


oc delete all -l app=postgresql-persistent2
oc delete pvc/postgresql-storage

cd~
lab install-storage finish






